{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pageArray","theFirstPage","theLastPage","className","cn","disabled","href","onClick","map","pageNum","active","page","items","App","useState","setPerPage","setCurrentPage","length","startItem","endItem","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAoB,GAEjBC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAYd,EAAW,EAAGW,GAC1BI,EAA+B,IAAhBN,EACfO,EAAcP,IAAgBE,EAwBpC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAAUJ,IADd,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA1BR,WACMN,GAIJL,EAAaD,EAAc,IAgBvB,oBAWDK,EAAUQ,KAAI,SAAAC,GAAO,OACpB,oBAEEN,UAAWC,IAAG,YACZ,CAAEM,OAAQD,IAAYd,IAH1B,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WAhDnB,IAA0BI,KAgDgBF,KA/C3Bd,GACXC,EAAae,IA0CT,SAMGF,KAVEA,MAcT,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUH,IADd,SAGE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAhDR,WACML,GAIJN,EAAaD,EAAc,IAsCvB,wBCzEFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KAEMvB,EAAQmB,EAAMK,OACdC,GAAavB,EAAc,GAAKD,EAAU,EAC1CyB,EAAUzB,EAAUC,GAAeF,EACrCC,EAAUC,EACVF,EAEE2B,EAAeR,EAAMS,MAAMH,EAAY,EAAGC,GAOhD,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACgDC,EADhD,eAC8D1B,EAD9D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO7B,EACP8B,SApBkB,SAACC,GAC3BV,GAAYU,EAAMC,OAAOH,OACzBP,EAAe,IAaT,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAAAe,GAAI,OAAIK,EAAeL,MAGvC,6BACGS,EAAaZ,KAAI,SAAAoB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ed0008ff.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pageArray = getNumbers(1, pageCount);\n  const theFirstPage = currentPage === 1;\n  const theLastPage = currentPage === pageCount;\n\n  function handlePageChange(page: number) {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  }\n\n  function handlePrevPage() {\n    if (theFirstPage) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  }\n\n  function handleNextPage() {\n    if (theLastPage) {\n      return;\n    }\n\n    onPageChange(currentPage + 1);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item',\n        { disabled: theFirstPage })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={theFirstPage}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pageArray.map(pageNum => (\n        <li\n          key={pageNum}\n          className={cn('page-item',\n            { active: pageNum === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNum}`}\n            onClick={() => handlePageChange(pageNum)}\n          >\n            {pageNum}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item',\n        { disabled: theLastPage })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={theLastPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n  const startItem = (currentPage - 1) * perPage + 1;\n  const endItem = perPage * currentPage <= total\n    ? perPage * currentPage\n    : total;\n\n  const visibleItems = items.slice(startItem - 1, endItem);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}